{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","catgories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFecthGifs","GifExpertApp","categories","cat","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,cAAkB,EACPC,mBAAS,IADF,mBACpCC,EADoC,KACxBC,EADwB,KAgBvC,OAAO,sBAAMC,SATI,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAS,OAAGP,GAAH,mBAAkBO,OACzCN,EAAc,MAIX,SACH,uBACAO,KAAK,OACLC,MAAOT,EACPU,SAjBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCNdG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCCXO,EAAc,SAAC,GAAoB,EAAnBJ,GAAoB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IACnC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAa,IAAD,EACXd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAHwB,mBAC9BC,EAD8B,KACvBC,EADuB,KAmBrC,OAbAC,qBAAW,WAEPxB,EAAQC,GACHwB,MAAK,SAAAC,GACEH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAI3B,CAACpB,IAGIqB,EDhBsBK,CAAa1B,GAA/Ba,EAFwB,EAE7BN,KAAYa,EAFiB,EAEjBA,QAElB,OACI,qCACI,6BAAKpB,IAEJoB,GAAW,mBAAGJ,UAAU,wCAAb,yBAEZ,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,aACAA,IAAOA,GAGHA,GAFGA,EAAIC,aEepBgB,EA9BM,WAAM,MAGazC,mBAAS,CAAC,cAHvB,mBAGhB0C,EAHgB,KAGJ3C,EAHI,KAWvB,OAAO,qCACC,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ2C,EAAWnB,KAAI,SAAAoB,GAAG,OACd,cAAC,EAAD,CAEI7B,SAAU6B,GADLA,YCnBjCC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.caddd7a5.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes  from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) =>{\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(catgories=>[inputValue, ...catgories]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n        return <form onSubmit={handleSubmit}>\r\n            <input\r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            />\r\n        </form>\r\n}\r\n\r\n//para poner el proptype de addcategory como requerido\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n    export const getGifs = async(category) =>{\r\n\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=pnCL4UBMvzHlZvPux4mJaamWVpZxBNE6`\r\n        const resp = await fetch(url);\r\n        const {data} = await resp.json();\r\n\r\n        const gifs = data.map(img => {\r\n            return{\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        })\r\n\r\n        return gifs;\r\n    }","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title, url}) => {\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport { useFecthGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const{data:images,loading} = useFecthGifs(category);\r\n    \r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n\r\n            {loading && <p className='card animate__animated animate__flash'>Cargando...</p>}\r\n            \r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map((img) => (\r\n                        <GifGridItem \r\n                        img = {img}\r\n                        key = {img.id}\r\n                        //Para enviar las propiedades de las imagenes como propiedades imdependientes\r\n                        {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}","import {useState,useEffect} from 'react';\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nexport const useFecthGifs = (category) =>{\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect (()=> {\r\n\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })\r\n            })\r\n\r\n    },[category])\r\n\r\n\r\n    return state;\r\n\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n    \r\n    //const categories = ['One Punch','Samurai X','Dragon Ball']\r\n    const [categories, setCategories] = useState(['Samurai X']);\r\n\r\n    // const AgregarTema = () => {\r\n\r\n    //     setCategories([...categories, 'hunterXhunter']);\r\n\r\n    // }\r\n\r\n    return <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(cat =>(\r\n                        <GifGrid\r\n                            key={cat}\r\n                            category={cat}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from \"./GifExpertApp\";\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}